{"version":3,"sources":["constants/user.ts","reducers/user.ts","constants/post.ts","reducers/post.ts","store.ts","actions/user.ts","helper.ts","components/login/Login.tsx","pages/login/LoginPage.tsx","components/register/Register.tsx","pages/register/RegisterPage.tsx","components/nav/Navbar.tsx","actions/post.ts","components/post/Post.tsx","components/postloader/Posts.tsx","components/sidebar/Sidebar.tsx","components/topbar/Topbar.tsx","pages/home/Home.tsx","components/modal/Modal.tsx","components/banner/Banner.tsx","pages/profile/Profile.tsx","components/commentbox/Comment.tsx","components/viewpost/ViewPost.tsx","pages/post/View.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","USER_LOGOUT","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAIL","GET_LOGGEDIN_USER_REQUEST","GET_LOGGEDIN_USER_SUCCESS","GET_LOGGEDIN_USER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","GET_FRIENDS_REQUEST","GET_FRIENDS_SUCCESS","GET_FRIENDS_FAIL","initialState","user","loading","error","success","initialupdateState","initialStateFriends","friends","CREATE_POST_REQUEST","CREATE_POST_SUCCESS","CREATE_POST_FAIL","GET_POST_REQUEST","GET_POST_SUCCESS","GET_POST_FAIL","GET_POST_BY_ID_REQUEST","GET_POST_BY_ID_SUCCESS","GET_POST_BY_ID_FAIL","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAIL","UPDATE_POST_RESET","initialStateCreate","post","initialStateGet","posts","initialStateUpdate","rootReducer","combineReducers","userLogin","state","action","type","payload","getLoggedInUser","userRegister","getUser","updateUser","createPost","getPosts","updatePost","getPostById","getFriends","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","useSelector","useStoreSelector","axios","defaults","withCredentials","getUserAction","id","dispatch","a","get","data","messge","updateUserAction","updateData","put","message","readDataFromCookie","cookie","Cookies","split","slice","localStorage","setItem","JSON","stringify","uploadImage","file","fieldname","formData","FormData","append","headers","toast","getImageUrl","url","isLoggedInUser","loggedInUser","currentUser","isAdded","list","currentUserId","some","itm","Login","useDispatch","navigate","useNavigate","useState","email","password","values","setValues","handleChange","e","currentTarget","name","value","handleNormalLogin","preventDefault","loginAction","useEffect","position","autoClose","Spinner","animation","variant","className","Form","Group","controlId","Control","placeholder","onChange","Button","onClick","style","textDecoration","to","window","open","handleGoogleLogin","LoginPage","Register","phone","location","confirmPassword","event","handleSubmit","alert","registerAction","RegisterPage","NavbarComp","parse","getItem","collapseOnSelect","expand","bg","Container","Brand","as","Link","Toggle","Collapse","Nav","color","eventKey","cb","removeItem","console","log","createPostAction","description","image","postedBy","getPostAction","updatePostAction","Post","comment","setComment","commented","setCommented","updatedPost","_id","src","profilepic","alt","process","cursor","likes","length","dislikes","postId","commentedBy","undefined","comments","handleComment","Posts","createdSuccess","updateSuccess","map","index","Sidebar","Card","body","Topbar","setImage","desc","setDesc","warning","path","rows","cols","target","fileList","files","submit","Home","fluid","Row","Col","md","ModalContainer","props","updatedUser","onHide","coverpic","Modal","size","centered","Header","closeButton","Title","Body","Footer","Banner","useParams","show","setShow","imgType","setImgType","edit","setEdit","edit1","setEdit1","edit2","setEdit2","setvalues","handleUpdateChange","handleShow","arg","handleUpdate","getLoggedInUserAction","followers","following","role","prev","Profile","Comment","key","ViewPost","getPostByIdAction","View","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0d4c4eb.chunk.js","sourcesContent":["\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\n\r\nexport const GET_USER_REQUEST='GET_USER_REQUEST'\r\nexport const GET_USER_SUCCESS='GET_USER_SUCCESS'\r\nexport const GET_USER_FAIL='GET_USER_FAIL'\r\n\r\nexport const GET_LOGGEDIN_USER_REQUEST='GET_LOGGEDIN_USER_REQUEST'\r\nexport const GET_LOGGEDIN_USER_SUCCESS='GET_LOGGEDIN_USER_SUCCESS'\r\nexport const GET_LOGGEDIN_USER_FAIL='GET_LOGGEDIN_USER_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n\r\n\r\nexport const GET_FRIENDS_REQUEST = 'GET_FRIENDS_REQUEST';\r\nexport const GET_FRIENDS_SUCCESS = 'GET_FRIENDS_SUCCESS';\r\nexport const GET_FRIENDS_FAIL = 'GET_FRIENDS_FAIL';\r\n\r\n\r\n","import {AnyAction} from 'redux'\r\nimport { UserData, UserUpdateData } from '../action-types/user'\r\nimport {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_RESET,\r\n    USER_LOGOUT,\r\n    GET_USER_FAIL,\r\n    GET_USER_SUCCESS,\r\n    GET_USER_REQUEST,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_REQUEST,\r\n    GET_LOGGEDIN_USER_FAIL,\r\n    GET_LOGGEDIN_USER_SUCCESS,\r\n    GET_LOGGEDIN_USER_REQUEST,\r\n    GET_FRIENDS_FAIL,\r\n    GET_FRIENDS_REQUEST,\r\n    GET_FRIENDS_SUCCESS\r\n} from '../constants/user'\r\n\r\nexport interface UserState{\r\n    user:UserData,\r\n    loading?:boolean,\r\n    error?:string,\r\n    success?:boolean\r\n}\r\n\r\nexport interface UserUpdateState{\r\n  user:UserUpdateData,\r\n  loading?:boolean,\r\n  error?:string,\r\n  success?:boolean\r\n}\r\n\r\nexport interface FriendsState{\r\n  friends:{_id:string,name:string,profilepic:string}[],\r\n  loading?:boolean,\r\n  error?:string,\r\n  success?:boolean\r\n}\r\n\r\nconst initialState:UserState={\r\n    user:{},\r\n    loading:false,\r\n    error:'',\r\n    success:false,\r\n\r\n}\r\n\r\nconst initialupdateState:UserUpdateState={\r\n    user:{},\r\n    loading:false,\r\n    error:'',\r\n    success:false,\r\n}\r\n\r\nconst initialStateFriends:FriendsState={\r\n  friends:[],\r\n  loading:false,\r\n  error:'',\r\n  success:false,\r\n}\r\n\r\nexport const userLoginReducer=(state=initialState,action:AnyAction)=>{\r\n   switch(action.type){\r\n     \r\n      case USER_LOGIN_REQUEST:\r\n        return{\r\n            ...state,\r\n            loading:true\r\n        }\r\n      case USER_LOGIN_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            success:true,\r\n            error:''\r\n            \r\n        }\r\n      case USER_LOGIN_FAIL:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            error:action.payload\r\n        }\r\n\r\n      case USER_LOGOUT:\r\n        return{\r\n            ...state,\r\n            user:null,\r\n            loading:false,\r\n            success:false,\r\n            error:''\r\n        }\r\n      default:\r\n        return state\r\n   }\r\n}\r\n   \r\nexport const userRegisterReducer=(state=initialState,action:AnyAction)=>{\r\n    switch(action.type){\r\n      \r\n        case USER_REGISTER_REQUEST:\r\n          return{\r\n                ...state,\r\n                loading:true\r\n          }\r\n        case USER_REGISTER_SUCCESS:\r\n          return{\r\n                ...state,\r\n                loading:false,\r\n                user:action.payload as UserData,\r\n                success:true,\r\n                error:''\r\n          }\r\n        case USER_REGISTER_FAIL:\r\n          return{\r\n                ...state,\r\n                loading:false,\r\n                error:action.payload\r\n          }\r\n\r\n        case USER_REGISTER_RESET:\r\n          return{\r\n            ...state,\r\n            success:false,\r\n          }\r\n        default:\r\n          return state\r\n    }\r\n    }\r\n\r\n\r\n export const getUserReducer=(state=initialState,action:AnyAction)=>{\r\n     switch (action.type) {\r\n       case GET_USER_REQUEST:\r\n            return{\r\n              ...state,\r\n              loading:true\r\n            }\r\n      case GET_USER_SUCCESS:\r\n        return{\r\n          ...state,\r\n          loading:false,\r\n          success:true,\r\n          user:action.payload as UserData,\r\n          error:''\r\n        }   \r\n     \r\n      case GET_USER_FAIL:\r\n        return{\r\n          ...state,\r\n          error:action.payload\r\n        }\r\n       default:\r\n         return state;\r\n     }\r\n }\r\n\r\n export const getLoggedInUserReducer=(state=initialState,action:AnyAction)=>{\r\n  switch (action.type) {\r\n    case GET_LOGGEDIN_USER_REQUEST:\r\n         return{\r\n           ...state,\r\n           loading:true\r\n         }\r\n   case GET_LOGGEDIN_USER_SUCCESS:\r\n     return{\r\n       ...state,\r\n       loading:false,\r\n       success:true,\r\n       user:action.payload as UserData,\r\n       error:''\r\n     }   \r\n  \r\n   case GET_LOGGEDIN_USER_FAIL:\r\n     return{\r\n       ...state,\r\n       error:action.payload\r\n     }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n export const updateUserReducer=(state=initialupdateState,action:AnyAction)=>{\r\n    switch (action.type) {\r\n      case USER_UPDATE_REQUEST:\r\n        return {\r\n          ...state,\r\n          loading:true\r\n        }\r\n        case USER_UPDATE_SUCCESS:\r\n          return {\r\n            ...state,\r\n            loading:false,\r\n            success:true,\r\n            user:action.payload as UserUpdateData,\r\n            error:''\r\n          } \r\n\r\n          case USER_UPDATE_FAIL:\r\n          return {\r\n            ...state,\r\n            loading:false,\r\n            error:action.payload\r\n          } \r\n    \r\n      default:\r\n        return state;\r\n    }\r\n }\r\n\r\n\r\n  export const getFriendsReducer=(state=initialStateFriends,action:AnyAction)=>{\r\n    switch (action.type) {\r\n      case GET_FRIENDS_REQUEST:\r\n        return {\r\n          ...state,\r\n          loading:true\r\n        }\r\n        case GET_FRIENDS_SUCCESS:\r\n          return {\r\n            ...state,\r\n            loading:false,\r\n            success:true,\r\n            friends:action.payload as {_id:string,name:string,profilepic:string}[],\r\n            error:''\r\n          } \r\n\r\n          case GET_FRIENDS_FAIL:\r\n          return {\r\n            ...state,\r\n            loading:false,\r\n            error:action.payload\r\n          } \r\n    \r\n      default:\r\n        return state;\r\n    }\r\n  } ","export const CREATE_POST_REQUEST = 'CREATE_POST_REQUEST';\r\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\r\nexport const CREATE_POST_FAIL = 'CREATE_POST_REQUEST';\r\n\r\n\r\nexport const GET_POST_REQUEST = 'GET_POST_REQUEST';\r\nexport const GET_POST_SUCCESS = 'GET_POST_SUCCESS';\r\nexport const GET_POST_FAIL = 'GET_POST_REQUEST';\r\n\r\n\r\nexport const GET_POST_BY_ID_REQUEST = 'GET_POST_BY_ID_REQUEST';\r\nexport const GET_POST_BY_ID_SUCCESS = 'GET_POST_BY_ID_SUCCESS';\r\nexport const GET_POST_BY_ID_FAIL = 'GET_POST_BY_ID_REQUEST';\r\n\r\n\r\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAIL = 'UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_RESET='UPDATE_POST_RESET';\r\n\r\n\r\n","import { AnyAction } from \"redux\";\r\nimport { Post, PostUpdate } from \"../action-types/post\";\r\nimport {\r\n    CREATE_POST_FAIL,\r\n    CREATE_POST_SUCCESS,\r\n    CREATE_POST_REQUEST,\r\n    GET_POST_FAIL,\r\n    GET_POST_SUCCESS,\r\n    GET_POST_REQUEST,\r\n    UPDATE_POST_FAIL,\r\n    UPDATE_POST_REQUEST,\r\n    UPDATE_POST_SUCCESS,\r\n    GET_POST_BY_ID_FAIL,\r\n    GET_POST_BY_ID_SUCCESS,\r\n    GET_POST_BY_ID_REQUEST,\r\n    UPDATE_POST_RESET\r\n} from '../constants/post'\r\n\r\ninterface CreatePostState {\r\n    post:Post\r\n    loading?: boolean;\r\n    success?: boolean;\r\n    error?:string\r\n}\r\n\r\ninterface GetPostState {\r\n    posts:Post[],\r\n    loading?: boolean;\r\n    success?: boolean;\r\n    error?:string\r\n}\r\n\r\ninterface UpdatePostState{\r\n    post:PostUpdate\r\n    loading?: boolean;\r\n    success?: boolean;\r\n    error?:string\r\n}\r\n\r\nconst initialStateCreate: CreatePostState = {\r\n    post:{},\r\n    loading: false,\r\n    success: false,\r\n    error:''\r\n}\r\n\r\nconst initialStateGet: GetPostState = {\r\n    posts:[],\r\n    loading: false,\r\n    success: false,\r\n    error:''\r\n}\r\n\r\n\r\nconst initialStateUpdate: UpdatePostState = {\r\n    post:{},\r\n    loading: false,\r\n    success: false,\r\n    error:''\r\n}\r\n\r\nexport const createPostReducer = (state = initialStateCreate, action:AnyAction) => {\r\n  switch (action.type) {\r\n      case CREATE_POST_REQUEST:\r\n          return{\r\n              ...state,\r\n              loading:true\r\n          }\r\n      case CREATE_POST_SUCCESS:\r\n          return{\r\n                ...state,\r\n                loading:false,\r\n                post:action.payload as Post,\r\n                success:true,\r\n                error:''\r\n          }     \r\n          \r\n          \r\n    case CREATE_POST_FAIL:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            error:action.payload\r\n        }\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getPostReducer = (state = initialStateGet, action:AnyAction) => {\r\n    switch (action.type) {\r\n        case GET_POST_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case GET_POST_SUCCESS:\r\n            return{\r\n                  ...state,\r\n                  loading:false,\r\n                  posts:action.payload as Post[],\r\n                  error:''\r\n            }     \r\n            \r\n            \r\n      case GET_POST_FAIL:\r\n          return{\r\n              ...state,\r\n              loading:false,\r\n              error:action.payload\r\n          }\r\n        default:\r\n            return state;\r\n    }\r\n  }\r\n\r\n\r\n  export const getPostByIdReducer = (state = initialStateCreate, action:AnyAction) => {\r\n    switch (action.type) {\r\n        case GET_POST_BY_ID_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case GET_POST_BY_ID_SUCCESS:\r\n            return{\r\n                  ...state,\r\n                  loading:false,\r\n                  post:action.payload as Post,\r\n                  error:''\r\n            }     \r\n            \r\n            \r\n      case GET_POST_BY_ID_FAIL:\r\n          return{\r\n              ...state,\r\n              loading:false,\r\n              error:action.payload\r\n          }\r\n        default:\r\n            return state;\r\n    }\r\n  } \r\n\r\n\r\n  export const updatePostReducer = (state = initialStateUpdate, action:AnyAction) => {\r\n    switch (action.type) {\r\n        case UPDATE_POST_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case UPDATE_POST_SUCCESS:\r\n            return{\r\n                  ...state,\r\n                  loading:false,\r\n                  post:action.payload as PostUpdate,\r\n                  success:true,\r\n                  error:''\r\n            }     \r\n            \r\n            \r\n      case UPDATE_POST_FAIL:\r\n          return{\r\n              ...state,\r\n              loading:false,\r\n              error:action.payload\r\n          }\r\n\r\n      case UPDATE_POST_RESET:\r\n          return {\r\n                ...state,\r\n                success:false\r\n          }    \r\n        default:\r\n            return state;\r\n    }\r\n  }","import {createStore,combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {TypedUseSelectorHook,useSelector as useStoreSelector} from 'react-redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { userLoginReducer, \r\n        userRegisterReducer,\r\n        getUserReducer, \r\n        updateUserReducer,\r\n        getLoggedInUserReducer,\r\n        getFriendsReducer,\r\n      } from './reducers/user'\r\nimport { createPostReducer,getPostReducer,updatePostReducer,getPostByIdReducer } from './reducers/post'\r\n\r\n\r\n\r\nconst rootReducer=combineReducers({\r\n   userLogin:userLoginReducer,\r\n   getLoggedInUser:getLoggedInUserReducer,\r\n   userRegister:userRegisterReducer,\r\n   getUser:getUserReducer,\r\n   updateUser:updateUserReducer,\r\n   createPost:createPostReducer,\r\n   getPosts:getPostReducer,\r\n   updatePost:updatePostReducer,\r\n   getPostById:getPostByIdReducer,\r\n   getFriends:getFriendsReducer,\r\n})\r\n\r\nexport type RootState=ReturnType<typeof rootReducer>\r\n\r\n// const userFromStorage=localStorage.getItem('user')?JSON.parse(`${localStorage.getItem('user')}`):null\r\n// const initialState:Omit<RootState,'userRegister'>={\r\n//     userLogin:{\r\n//         user:userFromStorage,\r\n//     }\r\n// }\r\n\r\nconst middleware=[thunk]\r\n\r\nconst store=createStore(rootReducer,composeWithDevTools(\r\n    applyMiddleware(...middleware)\r\n))\r\n\r\nexport const useSelector:TypedUseSelectorHook<RootState>=useStoreSelector\r\n\r\nexport default store","import { AnyAction } from 'redux'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport axios from 'axios'\r\nimport {toast} from 'react-toastify'\r\nimport {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_LOGOUT,\r\n    GET_USER_SUCCESS,\r\n    GET_USER_FAIL,\r\n    GET_USER_REQUEST,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    GET_LOGGEDIN_USER_FAIL,\r\n    GET_LOGGEDIN_USER_REQUEST,\r\n    GET_LOGGEDIN_USER_SUCCESS,\r\n    GET_FRIENDS_FAIL,\r\n    GET_FRIENDS_REQUEST,\r\n    GET_FRIENDS_SUCCESS\r\n} from '../constants/user'\r\nimport { RootState } from '../store'\r\nimport { NavigateFunction } from 'react-router'\r\nimport { UserUpdateData } from '../action-types/user'\r\n\r\n\r\n\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\nexport const loginAction =\r\n    (email: string, password: string): ThunkAction<void, RootState, undefined, AnyAction> => async (dispatch) => {\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n        try {\r\n            const {data}=await axios.post('/auth/login', { email, password })\r\n            dispatch({ type: USER_LOGIN_SUCCESS})\r\n\r\n        } catch (error:any) {\r\n            dispatch({ type: USER_LOGIN_FAIL,payload:error.message })\r\n            toast.error(\"Invalid Credentials\")\r\n        }\r\n    }\r\n\r\n\r\nexport const registerAction =\r\n    (name: string, email: string, password: string,phone:string,location:string): ThunkAction<void, RootState, undefined, AnyAction> => async (dispatch) => {\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n        try {\r\n            const { data } = await axios.post('/auth/register', { name, email, password ,phone,location})\r\n            dispatch({ type: USER_REGISTER_SUCCESS, payload: data })\r\n            toast.success(\"Registration Successful\")\r\n\r\n        } catch (error:any) {\r\n            dispatch({ type: USER_REGISTER_FAIL,payload:error.message })\r\n            toast.error(\"Registration Failed\")\r\n        }\r\n    }\r\n\r\nexport const logout = (cb:NavigateFunction): ThunkAction<void, RootState, undefined, AnyAction> => async (dispatch) => {\r\n    try {\r\n        await axios.get('/auth/logout')\r\n        dispatch({ type: USER_LOGOUT })\r\n        localStorage.removeItem('user')\r\n        cb('/login')\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getUserAction =\r\n    (id:string): ThunkAction<void, RootState, undefined, AnyAction> => async (dispatch) => {\r\n        dispatch({ type: GET_USER_REQUEST })\r\n        try {\r\n            const { data } = await axios.get('/user/'+id)\r\n            dispatch({ type: GET_USER_SUCCESS, payload: data })\r\n\r\n        } catch (error:any) {\r\n            dispatch({ type: GET_USER_FAIL,payload:error.messge })\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport const getFriendsAction =\r\n    (id:string): ThunkAction<void, RootState, undefined, AnyAction> => async (dispatch) => {\r\n        dispatch({ type: GET_FRIENDS_REQUEST })\r\n        try {\r\n            const { data } = await axios.get('/user/'+id+'/friends')\r\n            dispatch({ type: GET_FRIENDS_SUCCESS, payload: data })\r\n\r\n        } catch (error:any) {\r\n            dispatch({ type: GET_FRIENDS_FAIL,payload:error.message })\r\n        }\r\n    }\r\n\r\n    export const getLoggedInUserAction =\r\n    (id:string): ThunkAction<void, RootState, undefined, AnyAction> => async (dispatch) => {\r\n        dispatch({ type: GET_LOGGEDIN_USER_REQUEST })\r\n        try {\r\n            const { data } = await axios.get('/user/'+id)\r\n            dispatch({ type: GET_LOGGEDIN_USER_SUCCESS, payload: data })\r\n\r\n        } catch (error:any) {\r\n            dispatch({ type: GET_LOGGEDIN_USER_FAIL,payload:error.message })\r\n        }\r\n    }    \r\n\r\nexport const updateUserAction =\r\n(id:string|undefined,updateData:UserUpdateData): ThunkAction<void, RootState, undefined, AnyAction> => async (dispatch) => {\r\n    dispatch({ type: USER_UPDATE_REQUEST })\r\n    try {\r\n        const { data } = await axios.put('/user/'+id,updateData)\r\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data })\r\n        \r\n    } catch (error:any) {\r\n        dispatch({ type: USER_UPDATE_FAIL,payload:error.message })\r\n    }\r\n}    "," import Cookies from 'js-cookie';\r\n import axios from 'axios'\r\n import {toast} from 'react-toastify'\r\n\r\n \r\n \r\n export function readDataFromCookie():void{\r\n    const cookie= Cookies.get('token')?Cookies.get('token')?.split(':')[4].split('}')[0].slice(1,-1):null\r\n    localStorage.setItem('user',JSON.stringify(cookie))\r\n }\r\n\r\n export async function uploadImage(file:File,fieldname:string,type:string):Promise<any>{\r\n    try {\r\n      const formData=new FormData()\r\n      formData.append(`${fieldname}`,file)\r\n      return type==='post'?await axios.post(`/posts/upload`,formData,{\r\n         headers: {\r\n           'Content-Type': 'multipart/form-data'\r\n         }\r\n     }):\r\n     type==='cover'?await axios.post(`/user/upload/cover`,formData,{\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n          })\r\n          :\r\n      await axios.post(`/user/upload/profile`,formData,{\r\n               headers: {\r\n                  'Content-Type': 'multipart/form-data'\r\n               }\r\n            })\r\n      \r\n    } catch (error) {\r\n       toast.error('Image Upload Failed')\r\n   \r\n    }\r\n }\r\n\r\n\r\n export function getImageUrl(url:string|undefined,type:string):string{\r\n   return url?`/${url}`:type==='cover'?'images/cover.jpg':type==='profile'?'images/sample-profile-pic.png':''\r\n }\r\n\r\n\r\n export function isLoggedInUser(loggedInUser:string|undefined,currentUser:string|undefined):boolean{\r\n    return loggedInUser===currentUser\r\n }\r\n\r\n\r\n\r\nexport function isAdded(list:string[],currentUserId:string|undefined):boolean{\r\n   return list?.some(itm=>itm===currentUserId)\r\n}\r\n\r\n","import React,{useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Form ,Button, Spinner} from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {FaGoogle} from 'react-icons/fa'\r\nimport {useSelector} from '../../store'\r\nimport {useDispatch} from 'react-redux'\r\nimport './Login.css'\r\nimport { loginAction } from '../../actions/user'\r\nimport {readDataFromCookie} from '../../helper'\r\n\r\n\r\ninterface LoginInput{\r\n  email:string\r\n  password:string\r\n}\r\n\r\nexport const Login:React.FC = () => {\r\n\r\n  const dispatch=useDispatch()\r\n  const navigate=useNavigate()\r\n  const {success,loading}=useSelector(state=>state.userLogin)\r\n\r\n  const testLoad=true\r\n\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: ''\r\n  } as LoginInput)\r\n\r\n  const {email,password}=values\r\n\r\n  function handleChange(e:React.ChangeEvent<HTMLInputElement>){\r\n    const {name,value}=e.currentTarget\r\n    setValues({...values,[name]:value})\r\n    \r\n  }\r\n\r\n  function handleNormalLogin(e:React.MouseEvent<HTMLButtonElement, MouseEvent>){\r\n    e.preventDefault()\r\n    dispatch(loginAction(email,password))\r\n  }\r\n\r\n function handleGoogleLogin(e:React.MouseEvent<HTMLButtonElement, MouseEvent>){\r\n     e.preventDefault()\r\n     window.open('/google','_self')\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(success){\r\n     readDataFromCookie() \r\n     navigate('/')\r\n    }\r\n  },[success])\r\n\r\n  \r\n    return (\r\n      <>\r\n      <ToastContainer position='top-right' autoClose={5000} />\r\n      {loading?<Spinner animation=\"border\" variant=\"primary\" />\r\n      :\r\n      <div className='login-form'>\r\n    <Form className='form'>\r\n  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n    <Form.Control className='input' type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={handleChange} />\r\n  </Form.Group>\r\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n    <Form.Control className='input' type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange}/>\r\n  </Form.Group>\r\n  <Button variant=\"outline-dark\" className='sub-btn w-100 my-2' type=\"submit\" onClick={(e)=>handleNormalLogin(e)}>\r\n    Login\r\n  </Button>\r\n  <p>Do not have an account? <Link style={{textDecoration:'none'}} to='/register'>Register Here!!</Link></p>\r\n  <h4>OR</h4>\r\n  <Button variant=\"outline-dark\" className='sub-btn w-100 my-2' type=\"submit\" onClick={(e)=>handleGoogleLogin(e)}>\r\n   <span><FaGoogle /></span> Login with Google\r\n  </Button>\r\n</Form> \r\n        </div>\r\n      }\r\n        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Login } from '../../components/login/Login'\r\nimport './LoginPage.css'\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <div className='main'>\r\n            <Login />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Form, Button, Spinner } from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom'\r\nimport {useSelector} from '../../store'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport './Register.css'\r\nimport { registerAction } from '../../actions/user'\r\nimport { USER_REGISTER_RESET } from '../../constants/user'\r\n\r\n\r\ninterface IUser {\r\n    name: string,\r\n    email: string,\r\n    password: string,\r\n    phone: string,\r\n    location:string,\r\n    confirmPassword: string\r\n}\r\n\r\n\r\nconst Register: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {loading,success} =useSelector(state=>state.userRegister)\r\n    const navigate = useNavigate()\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        phone: '',\r\n        location: '',\r\n        confirmPassword: ''\r\n    } as IUser)\r\n\r\n    const {name,email,password,confirmPassword,phone,location} =values\r\n\r\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const { name, value } = event.currentTarget\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e:React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        e.preventDefault()\r\n        if(!name || !email || !password || !confirmPassword || !phone || !location) return alert('Please fill all the fields')\r\n        if(password!==confirmPassword) return alert('Password and Confirm Password must be same')\r\n        dispatch(registerAction(name,email,password,phone,location))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(success){\r\n            navigate('/login')\r\n            dispatch({type:USER_REGISTER_RESET})\r\n        }\r\n    },[success])\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer position='top-right' autoClose={5000} />\r\n        {loading?<Spinner animation=\"border\" variant=\"primary\" />\r\n        :\r\n        <div className='register-form'>\r\n            <Form className='form'>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Control className='input' name='name' type=\"text\" placeholder=\"Enter Name\" onChange={handleChange} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Control className='input' name='email' type=\"email\" placeholder=\"Enter email\" onChange={handleChange} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Control className='input' name='phone' type=\"text\" placeholder=\"Enter phone number\" onChange={handleChange} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Control className='input' name='location' type=\"text\" placeholder=\"Enter your location\" onChange={handleChange} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Control className='input' name='password' type=\"password\" placeholder=\"Password\" onChange={handleChange} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Control className='input' name='confirmPassword' type=\"password\" placeholder=\"Confirm Password\" onChange={handleChange} />\r\n                </Form.Group>\r\n                <Button variant=\"outline-dark\" className='sub-btn w-100 my-2' type=\"submit\" onClick={e=>handleSubmit(e)}>\r\n                    Register\r\n                </Button>\r\n                <p>Already have an account? <Link style={{ textDecoration: 'none' }} to='/login'>Login Here!!</Link></p>\r\n            </Form>\r\n        </div>\r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport Register from '../../components/register/Register'\r\nimport './RegisterPage.css'\r\n\r\nexport const RegisterPage = () => {\r\n    return (\r\n        <div className='main'>\r\n            <Register />\r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport {Navbar,Container,Nav,Button} from 'react-bootstrap'\r\nimport {useSelector} from '../../store'\r\nimport { Link } from 'react-router-dom'\r\nimport { getUserAction, logout } from '../../actions/user'\r\nimport {readDataFromCookie} from '../../helper'\r\n\r\nexport const NavbarComp = () => {\r\n const dispatch = useDispatch()\r\n const navigate = useNavigate()\r\n const {loading,error,user}=useSelector(state=>state.getUser)\r\n\r\n\r\n  useEffect(()=>{\r\n    readDataFromCookie()\r\n    dispatch(getUserAction(JSON.parse(`${localStorage.getItem('user')}`)))\r\n    if(!JSON.parse(`${localStorage.getItem('user')}`)||JSON.parse(`${localStorage.getItem('user')}`)===null){\r\n       navigate('/login')\r\n    }\r\n  },[dispatch])\r\n\r\n \r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n  <Container>\r\n  <Navbar.Brand as={Link} to='/'>Facebook</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n    <Nav className='nav-right'>\r\n      <Nav.Link as={Link} to='/profile' style={{color:'white'}}>Hi {user?.name}</Nav.Link>\r\n      <Nav.Link as={Button} style={{color:'white'}} eventKey={2} onClick={()=>dispatch(logout(navigate))}>\r\n        Logout\r\n      </Nav.Link>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n    )\r\n}\r\n","import { AnyAction } from 'redux'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { toast } from 'react-toastify'\r\nimport axios from 'axios'\r\nimport {\r\n    CREATE_POST_REQUEST,\r\n    CREATE_POST_FAIL,\r\n    CREATE_POST_SUCCESS,\r\n    GET_POST_REQUEST,\r\n    GET_POST_FAIL,\r\n    GET_POST_SUCCESS,\r\n    UPDATE_POST_FAIL,\r\n    UPDATE_POST_REQUEST,\r\n    UPDATE_POST_SUCCESS,\r\n    GET_POST_BY_ID_FAIL,\r\n    GET_POST_BY_ID_REQUEST,\r\n    GET_POST_BY_ID_SUCCESS\r\n} from '../constants/post'\r\nimport { RootState } from '../store';\r\nimport { PostUpdate } from '../action-types/post';\r\n\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\nexport const createPostAction =\r\n    (description: string, image: string ,postedBy:string): ThunkAction<void, RootState, undefined, AnyAction> => async (dispatch) => {\r\n        dispatch({ type: CREATE_POST_REQUEST})\r\n        try {\r\n            const {data}=await axios.post('/posts/create', { description, image ,postedBy })\r\n            dispatch({ type: CREATE_POST_SUCCESS,payload:data })\r\n            toast.success(\"Post Created\")\r\n\r\n        } catch (error:any) {\r\n            dispatch({ type: CREATE_POST_FAIL,payload:error.message })\r\n            toast.error(\"Post Creation Failed\")\r\n        }\r\n    }\r\n\r\n\r\n    export const getPostAction =\r\n    (): ThunkAction<void, RootState, undefined, AnyAction> => async (dispatch) => {\r\n        dispatch({ type: GET_POST_REQUEST})\r\n        try {\r\n            const {data}=await axios.get('/posts')\r\n            dispatch({ type: GET_POST_SUCCESS,payload:data })\r\n\r\n        } catch (error:any) {\r\n            dispatch({ type: GET_POST_FAIL,payload:error.message })\r\n        }\r\n    }  \r\n\r\n\r\n    export const getPostByIdAction =\r\n    (id:string): ThunkAction<void, RootState, undefined, AnyAction> => async (dispatch) => {\r\n        dispatch({ type: GET_POST_BY_ID_REQUEST})\r\n        try {\r\n            const {data}=await axios.get('/posts/'+id)\r\n            dispatch({ type: GET_POST_BY_ID_SUCCESS,payload:data })\r\n\r\n        } catch (error:any) {\r\n            dispatch({ type: GET_POST_BY_ID_FAIL,payload:error.message })\r\n        }\r\n    }  \r\n    \r\n    \r\n\r\n    export const updatePostAction =\r\n    (id:string,updateData:PostUpdate): ThunkAction<void, RootState, undefined, AnyAction> => async (dispatch) => {\r\n        dispatch({ type: UPDATE_POST_REQUEST})\r\n        try {\r\n            const {data}=await axios.put('/posts/'+id,updateData)\r\n            dispatch({ type: UPDATE_POST_SUCCESS,payload:data })\r\n\r\n        } catch (error:any) {\r\n            dispatch({ type: UPDATE_POST_FAIL,payload:error.message })\r\n            toast.error(`Operation failed due to ${error.message} error`)\r\n        }\r\n    }  ","import React,{useState,useEffect} from 'react'\r\nimport './Post.css'\r\nimport {AiFillLike,AiFillDislike} from 'react-icons/ai'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {useDispatch} from 'react-redux'\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport { Post as PostType } from '../../action-types/post'\r\nimport {useSelector} from '../../store'\r\nimport { updatePostAction } from '../../actions/post'\r\nimport { getImageUrl } from '../../helper'\r\n\r\n\r\ninterface PostProps {\r\n    post:PostType\r\n}\r\nexport const Post:React.FC<PostProps> = ({post}) => {\r\n    \r\n    const API_URL=process.env.REACT_APP_API_URL\r\n\r\n    const [comment, setComment] = useState('')\r\n    const [commented, setCommented] = useState(false)\r\n\r\n    const dispatch=useDispatch()\r\n    const {post:updatedPost,success}=useSelector(state=>state.updatePost)\r\n    const navigate=useNavigate()\r\n\r\n    function handleLike(id:string){\r\n        dispatch(updatePostAction(id,{likes:JSON.parse(`${localStorage.getItem('user')}`)}))\r\n    }\r\n\r\n    function handleDisLike(id:string){\r\n        dispatch(updatePostAction(id,{dislikes:JSON.parse(`${localStorage.getItem('user')}`)}))\r\n    }\r\n\r\n    function handleComment(e:React.MouseEvent<HTMLButtonElement, MouseEvent>,postId:string,commentedBy:string){\r\n        e.preventDefault()\r\n        if(comment===''||comment===undefined){\r\n            alert('Please enter a comment')\r\n        }else{\r\n            dispatch(updatePostAction(postId,{comments:{comment,commentedBy}}))\r\n            setCommented(true)\r\n        }\r\n       \r\n    }\r\n\r\n    useEffect(()=>{\r\n         if(success && commented){\r\n            setComment('')\r\n            setCommented(false)\r\n            navigate(`/posts/${updatedPost._id}`)\r\n         }\r\n    },[success,updatedPost])\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer position='top-right' autoClose={5000} />\r\n        <div className='post-main'>\r\n            <div className='post-top'>\r\n              <img src={getImageUrl(post.postedBy?.profilepic as string,'profile')} alt=\"profilepic\" />\r\n              <Link to={`/profile/${post.postedBy?._id}`}\r\n              style={{textDecoration:'none'}}\r\n              ><p>{post.postedBy?.name}</p></Link>\r\n            </div>\r\n            {\r\n                post.image && \r\n                <div className='img-container'>\r\n                <Link to={`/posts/${post._id}`}><img src={`${API_URL}/${post.image}`} alt='post' /></Link>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                post.description && \r\n                <div className='content'>\r\n              <Link to={`/posts/${post._id}`} style={{textDecoration:'none',color:'#000'}}>\r\n              <p>\r\n                 {post.description}\r\n             </p>\r\n             </Link>\r\n               </div>\r\n            }\r\n\r\n            <div className='like'>\r\n            <div className='like-sub1'>\r\n            <span style={{color:'green',cursor:'pointer'}} onClick={()=>handleLike(post._id as string)}><AiFillLike />{post.likes?.length}</span>\r\n            </div> \r\n            <div className='like-sub2'>\r\n            <span style={{color:'red',cursor:'pointer'}} onClick={()=>handleDisLike(post._id as string)}><AiFillDislike />{post.dislikes?.length}</span>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"comment\">\r\n             <Form>\r\n                 <Form.Group className='comment-gp' controlId=\"exampleForm.ControlTextarea1\">\r\n                     <Form.Control type='text' id='comment' name='comment' onChange={e=>setComment(e.currentTarget.value)} />\r\n                     <Button variant='outline-primary' id='btn' onClick={(e)=>handleComment(e,post?._id as string,JSON.parse(`${localStorage.getItem('user')}`) as string)}>comment</Button>\r\n                 </Form.Group>\r\n             </Form>\r\n            </div>\r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React,{useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport { getPostAction } from '../../actions/post'\r\nimport {useSelector} from '../../store'\r\nimport { Post } from '../post/Post'\r\nimport './Posts.css'\r\nimport {UPDATE_POST_RESET} from '../../constants/post'\r\n\r\n\r\nexport const Posts = () => {\r\n    const dispatch = useDispatch()\r\n    const {success:createdSuccess}=useSelector(state=>state.createPost)\r\n    const {posts}=useSelector(state=>state.getPosts)\r\n    const {post,success:updateSuccess}=useSelector(state=>state.updatePost)\r\n\r\n   useEffect(()=>{\r\n       dispatch({type:UPDATE_POST_RESET})\r\n       dispatch(getPostAction())\r\n   },[createdSuccess,dispatch,updateSuccess,post])\r\n\r\n    return (\r\n        <div className='postloader-main'>\r\n            {\r\n                posts && posts.map((itm,index)=>(\r\n                    <Post \r\n                    post={itm}\r\n                    key={index}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport './Sidebar.css'\r\nimport {Card} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {useSelector} from '../../store'\r\nimport { getFriendsAction } from '../../actions/user'\r\nimport { getImageUrl } from '../../helper'\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch=useDispatch()\r\n    const {friends,loading}=useSelector(state=>state.getFriends)\r\n\r\n    useEffect(()=>{\r\n        dispatch(getFriendsAction(JSON.parse(`${localStorage.getItem('user')}`)))\r\n    },[])\r\n\r\n    return (\r\n        <div className='sidebar-main'>\r\n            <h3>Friends Online</h3>\r\n           {\r\n               friends.length!==0?friends?.map((itm,index)=>(\r\n                 <Link key={index} style={{textDecoration:'none',color:'#000'}} to={`/profile/${itm._id}`}>\r\n                 <Card className='card' body>\r\n                     <div className='card-sub'>\r\n                     <img src={getImageUrl(itm.profilepic,'profile')} alt=\"profile-img\" />\r\n                     <h5>{itm.name}</h5>\r\n                     </div>\r\n                     <div className='card-online'></div>\r\n                 </Card>\r\n                 </Link>\r\n               ))\r\n               :\r\n               <h5>None of your friends are online</h5>\r\n           }\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect, ReactText} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport { ToastContainer,toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {useSelector} from '../../store'\r\nimport { Form,Button } from 'react-bootstrap'\r\nimport { uploadImage } from '../../helper'\r\nimport './Topbar.css'\r\nimport { createPostAction,getPostAction } from '../../actions/post'\r\n\r\nexport const Topbar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {user:{_id}}=useSelector(state=>state.getUser)\r\n    const {post}=useSelector(state=>state.createPost)\r\n    const [image, setImage] = useState<File>()\r\n    const [desc, setDesc] = useState<string>('')\r\n    \r\n    function handleImage(e:React.ChangeEvent<HTMLInputElement>){\r\n        const fileList = e.target.files;\r\n        if (!fileList) return;\r\n        const file = fileList[0];\r\n        setImage(file)\r\n    }\r\n    \r\n    async function submit(e:React.MouseEvent<HTMLButtonElement, MouseEvent>){\r\n        e.preventDefault()\r\n        if(!image && !desc){\r\n           toast.warning('Please select an image or write a description')\r\n           return\r\n        }\r\n        if(!image ||image==null){\r\n        dispatch(createPostAction(desc,'',_id as string))\r\n        setDesc('')\r\n        }else{\r\n        const {data}=await uploadImage(image!,'post','post')\r\n        data && dispatch(createPostAction(desc,data.file.path,_id as string))\r\n        setDesc('')\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n      dispatch(getPostAction())\r\n    },[post,dispatch])\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer position='top-right' autoClose={5000} />\r\n        <div className='topbar-main'>\r\n           \r\n                    <Form className='topbar-form'>\r\n                        <Form.Group className='topbar-form-group1' controlId=\"formText\">\r\n                            <Form.Control as='textarea' rows={2} cols={10} id='text' value={desc} name='desc' onChange={e=>setDesc(e.target.value)}/>                        \r\n                            <Form.Control type='file' id='post' name='image' onChange={handleImage}/>\r\n                        </Form.Group>\r\n                        <Form.Group className='topbar-form-group2'>\r\n                        <Button id=\"btn\" type='submit' variant='outline-primary' onClick={e=>submit(e)}>Post</Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { NavbarComp } from '../../components/nav/Navbar'\r\nimport { Posts } from '../../components/postloader/Posts'\r\nimport { Sidebar } from '../../components/sidebar/Sidebar'\r\nimport { Topbar } from '../../components/topbar/Topbar'\r\nimport './Home.css'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div className='home-main'>\r\n            <NavbarComp />\r\n           <Container fluid className='home-container'>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <Topbar />\r\n                    <Posts />\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Sidebar />\r\n                </Col>\r\n            </Row>\r\n           </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport { Modal, Button,Form } from 'react-bootstrap'\r\nimport './Modal.css'\r\nimport { updateUserAction } from '../../actions/user'\r\nimport { useSelector } from '../../store'\r\nimport { uploadImage } from '../../helper'\r\n\r\n\r\ninterface ModalProps {\r\n    show: boolean,\r\n    onHide:React.Dispatch<React.SetStateAction<boolean>>\r\n    type: string\r\n}\r\n\r\nexport const ModalContainer: React.FC<ModalProps> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {user}=useSelector(state=>state.getUser)\r\n    const {success,user:updatedUser}=useSelector(state=>state.updateUser)\r\n    const [image, setImage] = useState<File>()\r\n\r\n    function handleImage(e:React.ChangeEvent<HTMLInputElement>){\r\n        const fileList = e.target.files;\r\n        if (!fileList) return;\r\n        const file = fileList[0];\r\n        setImage(file)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(success){\r\n            props.onHide(false)\r\n        }\r\n    },[success,updatedUser])\r\n\r\n    async function handleSubmit(image:File|undefined,e:React.MouseEvent<HTMLButtonElement, MouseEvent>):Promise<void>{\r\n        e.preventDefault()\r\n      if(!image||image==null){\r\n          props.onHide(false)\r\n      }else{\r\n        if(props.type==='cover'){\r\n            const {data}=await uploadImage(image!,'cover',`${props.type}`)\r\n            dispatch(updateUserAction(user!._id as string,{coverpic:data?.file.path}))\r\n        }else{\r\n            const {data}=await uploadImage(image!,'profile',`${props.type}`)\r\n            dispatch(updateUserAction(user!._id as string,{profilepic:data?.file.path}))\r\n        }\r\n        \r\n        \r\n      }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Upload {props.type} picture\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form className='modal-form'>\r\n                    <Form.Group className='modal-form-group1' controlId=\"formText\">\r\n                        <Form.Control type='file' id='post' name='image' onChange={handleImage} />\r\n                    </Form.Group>\r\n                    \r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={(e)=>handleSubmit(image,e)}>Upload</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Banner.css'\r\nimport { Button, Form, Spinner } from 'react-bootstrap'\r\nimport { FaSearchLocation, FaPhone, FaEdit } from 'react-icons/fa'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { AiOutlineMail } from 'react-icons/ai'\r\nimport { Link } from 'react-router-dom'\r\nimport { ModalContainer } from '../modal/Modal'\r\nimport { useSelector } from '../../store'\r\nimport { getImageUrl, isAdded, isLoggedInUser } from '../../helper'\r\nimport { getLoggedInUserAction, getUserAction, updateUserAction } from '../../actions/user'\r\n\r\n\r\nconst Banner: React.FC = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const { user } = useSelector(state => state.getUser)\r\n  const { user: loggedInUser } = useSelector(state => state.getLoggedInUser)\r\n  const { success, user: updatedUser, loading } = useSelector(state => state.updateUser)\r\n  const { id } = useParams()\r\n\r\n  const [show, setShow] = useState<boolean>(false)\r\n  const [imgType, setImgType] = useState<string>('')\r\n  const [edit, setEdit] = useState<boolean>(false)\r\n  const [edit1, setEdit1] = useState<boolean>(false)\r\n  const [edit2, setEdit2] = useState<boolean>(false)\r\n  const [values, setvalues] = useState({\r\n    location: user.location,\r\n    phone: user.phone,\r\n    email: user.email,\r\n  })\r\n\r\n  const { location, phone, email } = values\r\n  \r\n  function handleUpdateChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    setvalues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  function handleShow(arg: string): void {\r\n    if (arg === 'profile') {\r\n      setImgType('profile')\r\n      setShow(true)\r\n    } else if (arg === 'cover') {\r\n      setImgType('cover')\r\n      setShow(true)\r\n    }\r\n  }\r\n\r\n  function handleAddFriend(): void {\r\n    dispatch(updateUserAction(\r\n      JSON.parse(`${localStorage.getItem('user')}`),\r\n      { friends: id as string }\r\n    ))\r\n  }\r\n\r\n  function handleFollow(): void {\r\n    dispatch(updateUserAction(\r\n      JSON.parse(`${localStorage.getItem('user')}`),\r\n      { following: id as string }\r\n    ))\r\n  }\r\n\r\n  function handleUpdate(arg: string): void {\r\n    if (arg === 'location') {\r\n      dispatch(updateUserAction(\r\n        JSON.parse(`${localStorage.getItem('user')}`),\r\n        { location: location as string }\r\n      ))\r\n      setEdit(false)\r\n    } else if (arg === 'phone') {\r\n      dispatch(updateUserAction(\r\n        JSON.parse(`${localStorage.getItem('user')}`),\r\n        { phone: phone as string }\r\n      ))\r\n      setEdit1(false)\r\n    } else if (arg === 'email') {\r\n      dispatch(updateUserAction(\r\n        JSON.parse(`${localStorage.getItem('user')}`),\r\n        { email: email as string }\r\n      ))\r\n      setEdit2(false)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getLoggedInUserAction(JSON.parse(`${localStorage.getItem('user')}`)))\r\n    if (id) {\r\n      dispatch(getUserAction(id))\r\n    } else {\r\n      dispatch(getUserAction(JSON.parse(`${localStorage.getItem('user')}`)))\r\n    }\r\n  }, [success, dispatch, updatedUser])\r\n\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position='top-right' autoClose={5000} />\r\n      <div className='banner-main'>\r\n        <ModalContainer show={show} onHide={setShow} type={imgType} />\r\n        <div className='cover-img-container'>\r\n        <img className='cover-img' src={getImageUrl(user?.coverpic, 'cover')} alt=\"cover-img\" />\r\n        </div>\r\n        <div className=\"profile-img-container\">\r\n          <img className='profile-img' src={getImageUrl(user?.profilepic, 'profile')} alt=\"profile-img\" />\r\n        </div>\r\n        <div className='banner-details'>\r\n          <h1>{user.name}</h1>\r\n          <div className='banner-details-top'>\r\n            <p>{user?.followers?.length === 1 ? `${user.followers?.length} follower` : `${user.followers?.length} followers`}</p>\r\n            <p>{user?.following?.length} following</p>\r\n            <p>{user?.friends?.length === 1 ? `${user.friends?.length} friend` : `${user.friends?.length} friends`}</p>\r\n          </div>\r\n          {\r\n            isLoggedInUser(JSON.parse(`${localStorage.getItem('user')}`), user._id) ?\r\n              <div className='banner-btn-container'>\r\n                <Button variant='outline-primary' className='banner-btn' onClick={() => handleShow('profile')}>Change Profile Pic</Button>\r\n                <Button variant='outline-primary' className='banner-btn' onClick={() => handleShow('cover')}>Change Cover Pic</Button>\r\n              </div>\r\n              :\r\n              <div className='banner-btn-container'>\r\n                <Button variant='outline-primary' className='banner-btn' onClick={() => handleAddFriend()} >\r\n                  {isAdded(loggedInUser?.friends as string[], id) ? 'Unfriend' : 'Add Friend'}\r\n                </Button>\r\n                <Button variant='outline-primary' className='banner-btn' onClick={() => handleFollow()} >\r\n                  {isAdded(loggedInUser?.following as string[], id) ? 'Unfollow' : 'Follow'}\r\n                </Button>\r\n              </div>\r\n\r\n          }\r\n          <div className='banner-description'>\r\n            {\r\n              edit ?\r\n                <Form className='banner-form'>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Control className='input' type=\"text\" name=\"location\" value={location} onChange={handleUpdateChange} placeholder=\"Enter location\" />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Button variant=\"outline-primary\" className='banner-btn' type=\"button\" onClick={() => handleUpdate('location')}>\r\n                      {loading ?\r\n                      <>\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                        </>\r\n                        :\r\n                        'Update'}\r\n                    </Button>\r\n                    <Button variant=\"outline-primary\" className='banner-btn' type=\"button\" onClick={() => setEdit(prev => !prev)}>\r\n                      Cancel\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n                :\r\n                <p><span style={{ color: 'blueviolet' }}><FaSearchLocation /></span> {user.location}\r\n                  {isLoggedInUser(JSON.parse(`${localStorage.getItem('user')}`), user._id) &&\r\n                    <FaEdit style={{ cursor: 'pointer' }} onClick={() => setEdit(prev => !prev)} />}</p>\r\n            }\r\n            {\r\n              edit1 ?\r\n                <Form className='banner-form'>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Control className='input' type=\"text\" name=\"phone\" value={phone} onChange={handleUpdateChange} placeholder=\"Enter phone\" />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Button variant=\"outline-primary\" className='banner-btn' type=\"submit\" onClick={() => handleUpdate('phone')}>\r\n                      {loading ?\r\n                        <>\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                        </>\r\n                        :\r\n                        'Update'}\r\n                    </Button>\r\n                    <Button variant=\"outline-primary\" className='banner-btn' type=\"button\" onClick={() => setEdit1(prev => !prev)}>\r\n                      Cancel\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n                :\r\n                <p><span style={{ color: 'green' }}><FaPhone /></span> {user.phone}\r\n                  {isLoggedInUser(JSON.parse(`${localStorage.getItem('user')}`), user._id) &&\r\n                    <FaEdit style={{ cursor: 'pointer' }} onClick={() => setEdit1(prev => !prev)} />}</p>\r\n            }\r\n            {\r\n              edit2 ?\r\n                <Form className='banner-form'>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Control className='input' type=\"email\" name=\"email\" value={email} onChange={handleUpdateChange} placeholder=\"Enter email\" />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Button variant=\"outline-primary\" className='banner-btn' type=\"submit\" onClick={() => handleUpdate('email')}>\r\n                      {loading ?\r\n                        <>\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                        </>\r\n                        :\r\n                        'Update'}\r\n                    </Button>\r\n                    <Button variant=\"outline-primary\" className='banner-btn' type=\"button\" onClick={() => setEdit2(prev => !prev)}>\r\n                      Cancel\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n                :\r\n                <p><span style={{ color: '' }}><AiOutlineMail /></span> {user.email}\r\n                  {isLoggedInUser(JSON.parse(`${localStorage.getItem('user')}`), user._id) &&\r\n                    <FaEdit style={{ cursor: 'pointer' }} onClick={() => setEdit2(prev => !prev)} />}</p>\r\n            }\r\n          </div>\r\n          <Link to='/' className='btn btn-outline-primary banner-btn'>Back Home</Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react'\r\nimport Banner from '../../components/banner/Banner'\r\nimport './Profile.css'\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div className='profile-main'>\r\n            <Banner />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { getImageUrl } from '../../helper'\r\nimport './Comment.css'\r\n\r\n\r\ninterface CommentProps {\r\n    comments:{comment:string,commentedBy:{name:string,_id:string,profilepic?:string}}[]|undefined\r\n}\r\n\r\nexport const Comment:React.FC<CommentProps> = ({comments}) => {\r\n    console.log(comments)\r\n    return (\r\n        <div className='comments-main'>\r\n           <h3>Comments</h3> \r\n           {\r\n               comments?.map((itm,key)=>{\r\n                   return (\r\n                    <Card className='card' body>\r\n                    <div className='card-sub'>\r\n                    <Link to={`/profile/${itm.commentedBy._id}`}><img src={getImageUrl(itm?.commentedBy.profilepic,'profile')} alt=\"profilepic\" /></Link>\r\n                    <h5>{itm.commentedBy.name}</h5>\r\n                    </div>\r\n                    <p>{itm.comment}</p>\r\n                </Card>\r\n                   )\r\n               })\r\n           }\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector} from '../../store'\r\nimport {useDispatch} from 'react-redux'\r\nimport './ViewPost.css'\r\nimport { getPostByIdAction } from '../../actions/post'\r\nimport { Post } from '../post/Post'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { Comment } from '../commentbox/Comment'\r\n\r\n\r\nexport const ViewPost:React.FC = () => {\r\n    const {id} = useParams()\r\n    const dispatch=useDispatch()\r\n    const {post}=useSelector(state=>state.getPostById)\r\n    const {success,post:updatedPost}=useSelector(state=>state.updatePost)\r\n\r\n    useEffect(()=>{\r\n        dispatch(getPostByIdAction(id as string))\r\n    },[id,dispatch,success,updatedPost])\r\n\r\n    return (\r\n        <div className='view-post-main'>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={8}>\r\n                    <Post post={post} />\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Comment comments={post?.comments} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NavbarComp } from '../../components/nav/Navbar'\r\nimport { ViewPost } from '../../components/viewpost/ViewPost'\r\nimport './View.css'\r\n\r\nexport const View = () => {\r\n    return (\r\n        <div className='view-main'>\r\n            <NavbarComp />\r\n            <ViewPost />\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\r\nimport {Route,Routes} from 'react-router-dom'\r\nimport { LoginPage } from './pages/login/LoginPage';\r\nimport { RegisterPage } from './pages/register/RegisterPage';\r\nimport { Home } from './pages/home/Home';\r\nimport { Profile } from './pages/profile/Profile';\r\nimport { View } from './pages/post/View';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Home />} />\r\n      <Route path='/login' element={<LoginPage />}/>\r\n      <Route path='/register' element={<RegisterPage />}/>\r\n      <Route path='/profile' element={<Profile />}/>\r\n      <Route path='/profile/:id' element={<Profile />}/>\r\n      <Route path='/posts/:id' element={<View />}/>\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux'\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport store from './store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <App /> \r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}